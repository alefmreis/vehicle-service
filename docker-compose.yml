version: '3.8'

services:
  dynamodb:
    image: amazon/dynamodb-local
    container_name: dynamodb
    ports:
      - "8000:8000"
  
  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      DYNAMO_ENDPOINT: http://dynamodb:8000
      AWS_REGION: ${AWS_DYNAMO_DB_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_DYNAMO_DB_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${AWS_DYNAMO_DB_ACCESS_SECRET}
    depends_on:
      - dynamodb
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    ports:
      - "9200:9200"
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1g  

  kibana:
    image: kibana:8.10.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  
  fluentd:
    build:
      context: ./fluentd
      dockerfile: Dockerfile
    container_name: fluentd-collector
    ports:
    - "24224:24224"
    - "24224:24224/udp"
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
    environment:
      FLUENT_ELASTICSEARCH_HOST: elasticsearch
      FLUENT_ELASTICSEARCH_SCHEME: http

  vehicle-service-api-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: server
    container_name: vehicle-service
    env_file:
      - ".env"
    ports:
      - "4000:4000"    
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: vehicle-service-api
    depends_on:
      - dynamodb
